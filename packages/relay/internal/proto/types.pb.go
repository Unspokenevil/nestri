// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: types.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MouseMove message
type ProtoMouseMove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Fixed value "MouseMove"
	X             int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoMouseMove) Reset() {
	*x = ProtoMouseMove{}
	mi := &file_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoMouseMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMouseMove) ProtoMessage() {}

func (x *ProtoMouseMove) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMouseMove.ProtoReflect.Descriptor instead.
func (*ProtoMouseMove) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoMouseMove) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoMouseMove) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ProtoMouseMove) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// MouseMoveAbs message
type ProtoMouseMoveAbs struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Fixed value "MouseMoveAbs"
	X             int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoMouseMoveAbs) Reset() {
	*x = ProtoMouseMoveAbs{}
	mi := &file_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoMouseMoveAbs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMouseMoveAbs) ProtoMessage() {}

func (x *ProtoMouseMoveAbs) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMouseMoveAbs.ProtoReflect.Descriptor instead.
func (*ProtoMouseMoveAbs) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoMouseMoveAbs) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoMouseMoveAbs) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ProtoMouseMoveAbs) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// MouseWheel message
type ProtoMouseWheel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Fixed value "MouseWheel"
	X             int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoMouseWheel) Reset() {
	*x = ProtoMouseWheel{}
	mi := &file_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoMouseWheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMouseWheel) ProtoMessage() {}

func (x *ProtoMouseWheel) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMouseWheel.ProtoReflect.Descriptor instead.
func (*ProtoMouseWheel) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoMouseWheel) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoMouseWheel) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ProtoMouseWheel) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// MouseKeyDown message
type ProtoMouseKeyDown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Fixed value "MouseKeyDown"
	Key           int32                  `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoMouseKeyDown) Reset() {
	*x = ProtoMouseKeyDown{}
	mi := &file_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoMouseKeyDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMouseKeyDown) ProtoMessage() {}

func (x *ProtoMouseKeyDown) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMouseKeyDown.ProtoReflect.Descriptor instead.
func (*ProtoMouseKeyDown) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoMouseKeyDown) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoMouseKeyDown) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

// MouseKeyUp message
type ProtoMouseKeyUp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Fixed value "MouseKeyUp"
	Key           int32                  `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoMouseKeyUp) Reset() {
	*x = ProtoMouseKeyUp{}
	mi := &file_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoMouseKeyUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMouseKeyUp) ProtoMessage() {}

func (x *ProtoMouseKeyUp) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMouseKeyUp.ProtoReflect.Descriptor instead.
func (*ProtoMouseKeyUp) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoMouseKeyUp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoMouseKeyUp) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

// KeyDown message
type ProtoKeyDown struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Fixed value "KeyDown"
	Key           int32                  `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoKeyDown) Reset() {
	*x = ProtoKeyDown{}
	mi := &file_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoKeyDown) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoKeyDown) ProtoMessage() {}

func (x *ProtoKeyDown) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoKeyDown.ProtoReflect.Descriptor instead.
func (*ProtoKeyDown) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoKeyDown) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoKeyDown) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

// KeyUp message
type ProtoKeyUp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // Fixed value "KeyUp"
	Key           int32                  `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoKeyUp) Reset() {
	*x = ProtoKeyUp{}
	mi := &file_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoKeyUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoKeyUp) ProtoMessage() {}

func (x *ProtoKeyUp) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoKeyUp.ProtoReflect.Descriptor instead.
func (*ProtoKeyUp) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoKeyUp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoKeyUp) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

// ControllerAttach message
type ProtoControllerAttach struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`  // Fixed value "ControllerAttach"
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`      // One of the following enums: "ps", "xbox" or "switch"
	Slot          int32                  `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"` // Slot number (0-3)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoControllerAttach) Reset() {
	*x = ProtoControllerAttach{}
	mi := &file_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoControllerAttach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoControllerAttach) ProtoMessage() {}

func (x *ProtoControllerAttach) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoControllerAttach.ProtoReflect.Descriptor instead.
func (*ProtoControllerAttach) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoControllerAttach) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoControllerAttach) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtoControllerAttach) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

// ControllerDetach message
type ProtoControllerDetach struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`  // Fixed value "ControllerDetach"
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"` // Slot number (0-3)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoControllerDetach) Reset() {
	*x = ProtoControllerDetach{}
	mi := &file_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoControllerDetach) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoControllerDetach) ProtoMessage() {}

func (x *ProtoControllerDetach) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoControllerDetach.ProtoReflect.Descriptor instead.
func (*ProtoControllerDetach) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoControllerDetach) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoControllerDetach) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

// ControllerButton message
type ProtoControllerButton struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`        // Fixed value "ControllerButtons"
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`       // Slot number (0-3)
	Button        int32                  `protobuf:"varint,3,opt,name=button,proto3" json:"button,omitempty"`   // Button code (linux input event code)
	Pressed       bool                   `protobuf:"varint,4,opt,name=pressed,proto3" json:"pressed,omitempty"` // true if pressed, false if released
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoControllerButton) Reset() {
	*x = ProtoControllerButton{}
	mi := &file_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoControllerButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoControllerButton) ProtoMessage() {}

func (x *ProtoControllerButton) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoControllerButton.ProtoReflect.Descriptor instead.
func (*ProtoControllerButton) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{9}
}

func (x *ProtoControllerButton) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoControllerButton) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ProtoControllerButton) GetButton() int32 {
	if x != nil {
		return x.Button
	}
	return 0
}

func (x *ProtoControllerButton) GetPressed() bool {
	if x != nil {
		return x.Pressed
	}
	return false
}

// ControllerTriggers message
type ProtoControllerTrigger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`        // Fixed value "ControllerTriggers"
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`       // Slot number (0-3)
	Trigger       int32                  `protobuf:"varint,3,opt,name=trigger,proto3" json:"trigger,omitempty"` // Trigger number (0 for left, 1 for right)
	Value         int32                  `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`     // trigger value (-32768 to 32767)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoControllerTrigger) Reset() {
	*x = ProtoControllerTrigger{}
	mi := &file_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoControllerTrigger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoControllerTrigger) ProtoMessage() {}

func (x *ProtoControllerTrigger) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoControllerTrigger.ProtoReflect.Descriptor instead.
func (*ProtoControllerTrigger) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoControllerTrigger) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoControllerTrigger) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ProtoControllerTrigger) GetTrigger() int32 {
	if x != nil {
		return x.Trigger
	}
	return 0
}

func (x *ProtoControllerTrigger) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// ControllerSticks message
type ProtoControllerStick struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`    // Fixed value "ControllerStick"
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`   // Slot number (0-3)
	Stick         int32                  `protobuf:"varint,3,opt,name=stick,proto3" json:"stick,omitempty"` // Stick number (0 for left, 1 for right)
	X             int32                  `protobuf:"varint,4,opt,name=x,proto3" json:"x,omitempty"`         // X axis value (-32768 to 32767)
	Y             int32                  `protobuf:"varint,5,opt,name=y,proto3" json:"y,omitempty"`         // Y axis value (-32768 to 32767)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoControllerStick) Reset() {
	*x = ProtoControllerStick{}
	mi := &file_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoControllerStick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoControllerStick) ProtoMessage() {}

func (x *ProtoControllerStick) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoControllerStick.ProtoReflect.Descriptor instead.
func (*ProtoControllerStick) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{11}
}

func (x *ProtoControllerStick) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoControllerStick) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ProtoControllerStick) GetStick() int32 {
	if x != nil {
		return x.Stick
	}
	return 0
}

func (x *ProtoControllerStick) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ProtoControllerStick) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// ControllerAxis message
type ProtoControllerAxis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`    // Fixed value "ControllerAxis"
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`   // Slot number (0-3)
	Axis          int32                  `protobuf:"varint,3,opt,name=axis,proto3" json:"axis,omitempty"`   // Axis number (0 for d-pad horizontal, 1 for d-pad vertical)
	Value         int32                  `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"` // axis value (-1 to 1)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoControllerAxis) Reset() {
	*x = ProtoControllerAxis{}
	mi := &file_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoControllerAxis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoControllerAxis) ProtoMessage() {}

func (x *ProtoControllerAxis) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoControllerAxis.ProtoReflect.Descriptor instead.
func (*ProtoControllerAxis) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{12}
}

func (x *ProtoControllerAxis) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoControllerAxis) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ProtoControllerAxis) GetAxis() int32 {
	if x != nil {
		return x.Axis
	}
	return 0
}

func (x *ProtoControllerAxis) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// ControllerRumble message
type ProtoControllerRumble struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                         // Fixed value "ControllerRumble"
	Slot          int32                  `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`                                        // Slot number (0-3)
	LowFrequency  int32                  `protobuf:"varint,3,opt,name=low_frequency,json=lowFrequency,proto3" json:"low_frequency,omitempty"`    // Low frequency rumble (0-65535)
	HighFrequency int32                  `protobuf:"varint,4,opt,name=high_frequency,json=highFrequency,proto3" json:"high_frequency,omitempty"` // High frequency rumble (0-65535)
	Duration      int32                  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`                                // Duration in milliseconds
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoControllerRumble) Reset() {
	*x = ProtoControllerRumble{}
	mi := &file_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoControllerRumble) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoControllerRumble) ProtoMessage() {}

func (x *ProtoControllerRumble) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoControllerRumble.ProtoReflect.Descriptor instead.
func (*ProtoControllerRumble) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{13}
}

func (x *ProtoControllerRumble) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProtoControllerRumble) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ProtoControllerRumble) GetLowFrequency() int32 {
	if x != nil {
		return x.LowFrequency
	}
	return 0
}

func (x *ProtoControllerRumble) GetHighFrequency() int32 {
	if x != nil {
		return x.HighFrequency
	}
	return 0
}

func (x *ProtoControllerRumble) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// Union of all Input types
type ProtoInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to InputType:
	//
	//	*ProtoInput_MouseMove
	//	*ProtoInput_MouseMoveAbs
	//	*ProtoInput_MouseWheel
	//	*ProtoInput_MouseKeyDown
	//	*ProtoInput_MouseKeyUp
	//	*ProtoInput_KeyDown
	//	*ProtoInput_KeyUp
	//	*ProtoInput_ControllerAttach
	//	*ProtoInput_ControllerDetach
	//	*ProtoInput_ControllerButton
	//	*ProtoInput_ControllerTrigger
	//	*ProtoInput_ControllerStick
	//	*ProtoInput_ControllerAxis
	//	*ProtoInput_ControllerRumble
	InputType     isProtoInput_InputType `protobuf_oneof:"input_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProtoInput) Reset() {
	*x = ProtoInput{}
	mi := &file_types_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoInput) ProtoMessage() {}

func (x *ProtoInput) ProtoReflect() protoreflect.Message {
	mi := &file_types_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoInput.ProtoReflect.Descriptor instead.
func (*ProtoInput) Descriptor() ([]byte, []int) {
	return file_types_proto_rawDescGZIP(), []int{14}
}

func (x *ProtoInput) GetInputType() isProtoInput_InputType {
	if x != nil {
		return x.InputType
	}
	return nil
}

func (x *ProtoInput) GetMouseMove() *ProtoMouseMove {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_MouseMove); ok {
			return x.MouseMove
		}
	}
	return nil
}

func (x *ProtoInput) GetMouseMoveAbs() *ProtoMouseMoveAbs {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_MouseMoveAbs); ok {
			return x.MouseMoveAbs
		}
	}
	return nil
}

func (x *ProtoInput) GetMouseWheel() *ProtoMouseWheel {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_MouseWheel); ok {
			return x.MouseWheel
		}
	}
	return nil
}

func (x *ProtoInput) GetMouseKeyDown() *ProtoMouseKeyDown {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_MouseKeyDown); ok {
			return x.MouseKeyDown
		}
	}
	return nil
}

func (x *ProtoInput) GetMouseKeyUp() *ProtoMouseKeyUp {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_MouseKeyUp); ok {
			return x.MouseKeyUp
		}
	}
	return nil
}

func (x *ProtoInput) GetKeyDown() *ProtoKeyDown {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_KeyDown); ok {
			return x.KeyDown
		}
	}
	return nil
}

func (x *ProtoInput) GetKeyUp() *ProtoKeyUp {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_KeyUp); ok {
			return x.KeyUp
		}
	}
	return nil
}

func (x *ProtoInput) GetControllerAttach() *ProtoControllerAttach {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_ControllerAttach); ok {
			return x.ControllerAttach
		}
	}
	return nil
}

func (x *ProtoInput) GetControllerDetach() *ProtoControllerDetach {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_ControllerDetach); ok {
			return x.ControllerDetach
		}
	}
	return nil
}

func (x *ProtoInput) GetControllerButton() *ProtoControllerButton {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_ControllerButton); ok {
			return x.ControllerButton
		}
	}
	return nil
}

func (x *ProtoInput) GetControllerTrigger() *ProtoControllerTrigger {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_ControllerTrigger); ok {
			return x.ControllerTrigger
		}
	}
	return nil
}

func (x *ProtoInput) GetControllerStick() *ProtoControllerStick {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_ControllerStick); ok {
			return x.ControllerStick
		}
	}
	return nil
}

func (x *ProtoInput) GetControllerAxis() *ProtoControllerAxis {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_ControllerAxis); ok {
			return x.ControllerAxis
		}
	}
	return nil
}

func (x *ProtoInput) GetControllerRumble() *ProtoControllerRumble {
	if x != nil {
		if x, ok := x.InputType.(*ProtoInput_ControllerRumble); ok {
			return x.ControllerRumble
		}
	}
	return nil
}

type isProtoInput_InputType interface {
	isProtoInput_InputType()
}

type ProtoInput_MouseMove struct {
	MouseMove *ProtoMouseMove `protobuf:"bytes,1,opt,name=mouse_move,json=mouseMove,proto3,oneof"`
}

type ProtoInput_MouseMoveAbs struct {
	MouseMoveAbs *ProtoMouseMoveAbs `protobuf:"bytes,2,opt,name=mouse_move_abs,json=mouseMoveAbs,proto3,oneof"`
}

type ProtoInput_MouseWheel struct {
	MouseWheel *ProtoMouseWheel `protobuf:"bytes,3,opt,name=mouse_wheel,json=mouseWheel,proto3,oneof"`
}

type ProtoInput_MouseKeyDown struct {
	MouseKeyDown *ProtoMouseKeyDown `protobuf:"bytes,4,opt,name=mouse_key_down,json=mouseKeyDown,proto3,oneof"`
}

type ProtoInput_MouseKeyUp struct {
	MouseKeyUp *ProtoMouseKeyUp `protobuf:"bytes,5,opt,name=mouse_key_up,json=mouseKeyUp,proto3,oneof"`
}

type ProtoInput_KeyDown struct {
	KeyDown *ProtoKeyDown `protobuf:"bytes,6,opt,name=key_down,json=keyDown,proto3,oneof"`
}

type ProtoInput_KeyUp struct {
	KeyUp *ProtoKeyUp `protobuf:"bytes,7,opt,name=key_up,json=keyUp,proto3,oneof"`
}

type ProtoInput_ControllerAttach struct {
	ControllerAttach *ProtoControllerAttach `protobuf:"bytes,8,opt,name=controller_attach,json=controllerAttach,proto3,oneof"`
}

type ProtoInput_ControllerDetach struct {
	ControllerDetach *ProtoControllerDetach `protobuf:"bytes,9,opt,name=controller_detach,json=controllerDetach,proto3,oneof"`
}

type ProtoInput_ControllerButton struct {
	ControllerButton *ProtoControllerButton `protobuf:"bytes,10,opt,name=controller_button,json=controllerButton,proto3,oneof"`
}

type ProtoInput_ControllerTrigger struct {
	ControllerTrigger *ProtoControllerTrigger `protobuf:"bytes,11,opt,name=controller_trigger,json=controllerTrigger,proto3,oneof"`
}

type ProtoInput_ControllerStick struct {
	ControllerStick *ProtoControllerStick `protobuf:"bytes,12,opt,name=controller_stick,json=controllerStick,proto3,oneof"`
}

type ProtoInput_ControllerAxis struct {
	ControllerAxis *ProtoControllerAxis `protobuf:"bytes,13,opt,name=controller_axis,json=controllerAxis,proto3,oneof"`
}

type ProtoInput_ControllerRumble struct {
	ControllerRumble *ProtoControllerRumble `protobuf:"bytes,14,opt,name=controller_rumble,json=controllerRumble,proto3,oneof"`
}

func (*ProtoInput_MouseMove) isProtoInput_InputType() {}

func (*ProtoInput_MouseMoveAbs) isProtoInput_InputType() {}

func (*ProtoInput_MouseWheel) isProtoInput_InputType() {}

func (*ProtoInput_MouseKeyDown) isProtoInput_InputType() {}

func (*ProtoInput_MouseKeyUp) isProtoInput_InputType() {}

func (*ProtoInput_KeyDown) isProtoInput_InputType() {}

func (*ProtoInput_KeyUp) isProtoInput_InputType() {}

func (*ProtoInput_ControllerAttach) isProtoInput_InputType() {}

func (*ProtoInput_ControllerDetach) isProtoInput_InputType() {}

func (*ProtoInput_ControllerButton) isProtoInput_InputType() {}

func (*ProtoInput_ControllerTrigger) isProtoInput_InputType() {}

func (*ProtoInput_ControllerStick) isProtoInput_InputType() {}

func (*ProtoInput_ControllerAxis) isProtoInput_InputType() {}

func (*ProtoInput_ControllerRumble) isProtoInput_InputType() {}

var File_types_proto protoreflect.FileDescriptor

const file_types_proto_rawDesc = "" +
	"\n" +
	"\vtypes.proto\x12\x05proto\"@\n" +
	"\x0eProtoMouseMove\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x05R\x01y\"C\n" +
	"\x11ProtoMouseMoveAbs\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x05R\x01y\"A\n" +
	"\x0fProtoMouseWheel\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\f\n" +
	"\x01x\x18\x02 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x03 \x01(\x05R\x01y\"9\n" +
	"\x11ProtoMouseKeyDown\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03key\x18\x02 \x01(\x05R\x03key\"7\n" +
	"\x0fProtoMouseKeyUp\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03key\x18\x02 \x01(\x05R\x03key\"4\n" +
	"\fProtoKeyDown\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03key\x18\x02 \x01(\x05R\x03key\"2\n" +
	"\n" +
	"ProtoKeyUp\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03key\x18\x02 \x01(\x05R\x03key\"O\n" +
	"\x15ProtoControllerAttach\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04slot\x18\x03 \x01(\x05R\x04slot\"?\n" +
	"\x15ProtoControllerDetach\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\"q\n" +
	"\x15ProtoControllerButton\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x16\n" +
	"\x06button\x18\x03 \x01(\x05R\x06button\x12\x18\n" +
	"\apressed\x18\x04 \x01(\bR\apressed\"p\n" +
	"\x16ProtoControllerTrigger\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x18\n" +
	"\atrigger\x18\x03 \x01(\x05R\atrigger\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x05R\x05value\"p\n" +
	"\x14ProtoControllerStick\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x14\n" +
	"\x05stick\x18\x03 \x01(\x05R\x05stick\x12\f\n" +
	"\x01x\x18\x04 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x05 \x01(\x05R\x01y\"g\n" +
	"\x13ProtoControllerAxis\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12\x12\n" +
	"\x04axis\x18\x03 \x01(\x05R\x04axis\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x05R\x05value\"\xa7\x01\n" +
	"\x15ProtoControllerRumble\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12#\n" +
	"\rlow_frequency\x18\x03 \x01(\x05R\flowFrequency\x12%\n" +
	"\x0ehigh_frequency\x18\x04 \x01(\x05R\rhighFrequency\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\x05R\bduration\"\xc0\a\n" +
	"\n" +
	"ProtoInput\x126\n" +
	"\n" +
	"mouse_move\x18\x01 \x01(\v2\x15.proto.ProtoMouseMoveH\x00R\tmouseMove\x12@\n" +
	"\x0emouse_move_abs\x18\x02 \x01(\v2\x18.proto.ProtoMouseMoveAbsH\x00R\fmouseMoveAbs\x129\n" +
	"\vmouse_wheel\x18\x03 \x01(\v2\x16.proto.ProtoMouseWheelH\x00R\n" +
	"mouseWheel\x12@\n" +
	"\x0emouse_key_down\x18\x04 \x01(\v2\x18.proto.ProtoMouseKeyDownH\x00R\fmouseKeyDown\x12:\n" +
	"\fmouse_key_up\x18\x05 \x01(\v2\x16.proto.ProtoMouseKeyUpH\x00R\n" +
	"mouseKeyUp\x120\n" +
	"\bkey_down\x18\x06 \x01(\v2\x13.proto.ProtoKeyDownH\x00R\akeyDown\x12*\n" +
	"\x06key_up\x18\a \x01(\v2\x11.proto.ProtoKeyUpH\x00R\x05keyUp\x12K\n" +
	"\x11controller_attach\x18\b \x01(\v2\x1c.proto.ProtoControllerAttachH\x00R\x10controllerAttach\x12K\n" +
	"\x11controller_detach\x18\t \x01(\v2\x1c.proto.ProtoControllerDetachH\x00R\x10controllerDetach\x12K\n" +
	"\x11controller_button\x18\n" +
	" \x01(\v2\x1c.proto.ProtoControllerButtonH\x00R\x10controllerButton\x12N\n" +
	"\x12controller_trigger\x18\v \x01(\v2\x1d.proto.ProtoControllerTriggerH\x00R\x11controllerTrigger\x12H\n" +
	"\x10controller_stick\x18\f \x01(\v2\x1b.proto.ProtoControllerStickH\x00R\x0fcontrollerStick\x12E\n" +
	"\x0fcontroller_axis\x18\r \x01(\v2\x1a.proto.ProtoControllerAxisH\x00R\x0econtrollerAxis\x12K\n" +
	"\x11controller_rumble\x18\x0e \x01(\v2\x1c.proto.ProtoControllerRumbleH\x00R\x10controllerRumbleB\f\n" +
	"\n" +
	"input_typeB\x16Z\x14relay/internal/protob\x06proto3"

var (
	file_types_proto_rawDescOnce sync.Once
	file_types_proto_rawDescData []byte
)

func file_types_proto_rawDescGZIP() []byte {
	file_types_proto_rawDescOnce.Do(func() {
		file_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_proto_rawDesc), len(file_types_proto_rawDesc)))
	})
	return file_types_proto_rawDescData
}

var file_types_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_types_proto_goTypes = []any{
	(*ProtoMouseMove)(nil),         // 0: proto.ProtoMouseMove
	(*ProtoMouseMoveAbs)(nil),      // 1: proto.ProtoMouseMoveAbs
	(*ProtoMouseWheel)(nil),        // 2: proto.ProtoMouseWheel
	(*ProtoMouseKeyDown)(nil),      // 3: proto.ProtoMouseKeyDown
	(*ProtoMouseKeyUp)(nil),        // 4: proto.ProtoMouseKeyUp
	(*ProtoKeyDown)(nil),           // 5: proto.ProtoKeyDown
	(*ProtoKeyUp)(nil),             // 6: proto.ProtoKeyUp
	(*ProtoControllerAttach)(nil),  // 7: proto.ProtoControllerAttach
	(*ProtoControllerDetach)(nil),  // 8: proto.ProtoControllerDetach
	(*ProtoControllerButton)(nil),  // 9: proto.ProtoControllerButton
	(*ProtoControllerTrigger)(nil), // 10: proto.ProtoControllerTrigger
	(*ProtoControllerStick)(nil),   // 11: proto.ProtoControllerStick
	(*ProtoControllerAxis)(nil),    // 12: proto.ProtoControllerAxis
	(*ProtoControllerRumble)(nil),  // 13: proto.ProtoControllerRumble
	(*ProtoInput)(nil),             // 14: proto.ProtoInput
}
var file_types_proto_depIdxs = []int32{
	0,  // 0: proto.ProtoInput.mouse_move:type_name -> proto.ProtoMouseMove
	1,  // 1: proto.ProtoInput.mouse_move_abs:type_name -> proto.ProtoMouseMoveAbs
	2,  // 2: proto.ProtoInput.mouse_wheel:type_name -> proto.ProtoMouseWheel
	3,  // 3: proto.ProtoInput.mouse_key_down:type_name -> proto.ProtoMouseKeyDown
	4,  // 4: proto.ProtoInput.mouse_key_up:type_name -> proto.ProtoMouseKeyUp
	5,  // 5: proto.ProtoInput.key_down:type_name -> proto.ProtoKeyDown
	6,  // 6: proto.ProtoInput.key_up:type_name -> proto.ProtoKeyUp
	7,  // 7: proto.ProtoInput.controller_attach:type_name -> proto.ProtoControllerAttach
	8,  // 8: proto.ProtoInput.controller_detach:type_name -> proto.ProtoControllerDetach
	9,  // 9: proto.ProtoInput.controller_button:type_name -> proto.ProtoControllerButton
	10, // 10: proto.ProtoInput.controller_trigger:type_name -> proto.ProtoControllerTrigger
	11, // 11: proto.ProtoInput.controller_stick:type_name -> proto.ProtoControllerStick
	12, // 12: proto.ProtoInput.controller_axis:type_name -> proto.ProtoControllerAxis
	13, // 13: proto.ProtoInput.controller_rumble:type_name -> proto.ProtoControllerRumble
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_types_proto_init() }
func file_types_proto_init() {
	if File_types_proto != nil {
		return
	}
	file_types_proto_msgTypes[14].OneofWrappers = []any{
		(*ProtoInput_MouseMove)(nil),
		(*ProtoInput_MouseMoveAbs)(nil),
		(*ProtoInput_MouseWheel)(nil),
		(*ProtoInput_MouseKeyDown)(nil),
		(*ProtoInput_MouseKeyUp)(nil),
		(*ProtoInput_KeyDown)(nil),
		(*ProtoInput_KeyUp)(nil),
		(*ProtoInput_ControllerAttach)(nil),
		(*ProtoInput_ControllerDetach)(nil),
		(*ProtoInput_ControllerButton)(nil),
		(*ProtoInput_ControllerTrigger)(nil),
		(*ProtoInput_ControllerStick)(nil),
		(*ProtoInput_ControllerAxis)(nil),
		(*ProtoInput_ControllerRumble)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_proto_rawDesc), len(file_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_proto_goTypes,
		DependencyIndexes: file_types_proto_depIdxs,
		MessageInfos:      file_types_proto_msgTypes,
	}.Build()
	File_types_proto = out.File
	file_types_proto_goTypes = nil
	file_types_proto_depIdxs = nil
}
